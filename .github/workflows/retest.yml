name: "Retest chroots on testing-farm"

on:
  issue_comment:
    types: created

permissions:
  issues: write

jobs:
  show-reaction:
    if: ${{ !github.event.issue.pull_request && startsWith(github.event.comment.body, '/retest')}}
    runs-on: ubuntu-latest
    steps:
      - name: Add reaction to trigger comment
        uses: actions/github-script@v7
        with:
          script: |
            const mutation = `mutation($comment_id: ID!, $reaction: ReactionContent!) {
              addReaction(input: {subjectId: $comment_id, content: $reaction}) {
                reaction {
                  content
                }
                subject {
                  id
                }
              }
            }`;
            const variables = {
              comment_id: '${{ github.event.comment.node_id }}',
              reaction: 'EYES'
            }
            const result = await github.graphql(mutation, variables)
            console.log(result)
  check-team-membership:
    runs-on: ubuntu-latest
    steps:
      - name: Check if commented is member of the required team.
        uses: actions/github-script@v7
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TEST_TOKEN }}
        with:
          script: |
            const query = `query check_if_user_is_team_member($user_login: String!, $org: String!, $team_slug: String!) {
              organization(login: $org) {
                team(slug: $team_slug) {
                  members(query: $user_login) {
                    totalCount
                  }
                }
              }
            }`;
            const variables = {
              "user_login": "${{github.event.comment.user.login}}",
              "org": "${{github.repository_owner}}",
              "team_slug": "llvm-toolset-engineers"
            }
            const result = await github.graphql(query, variables)
            console.log(result)

            if(result['organization']['team']['members']['totalCount'] != 1) {
              core.setFailed("User is not allowed to use the /retest command");
            }
  get-chroots:
    needs: check-team-membership
    if: ${{ !github.event.issue.pull_request && startsWith(github.event.comment.body, '/retest')}}
    runs-on: ubuntu-latest
    outputs:
      chroots: ${{ steps.chroots-step.outputs.chroots }}
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/prepare-python
      - name: Get Chroots
        id: chroots-step
        run: |
          echo "${{ github.event.comment.body }}" | grep -Pe '^\s*/retest\s+'
          chroots=$(echo "${{ github.event.comment.body }}" | sed 's/^\s*\/retest\s*//g')
          echo "chroots=$chroots" >> "$GITHUB_OUTPUT"
  retest:
    needs: get-chroots
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/prepare-python
      - name: Run retest script
        shell: bash -e {0}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          python3 snapshot_manager/main.py \
            --github-repo ${GITHUB_REPOSITORY} \
            --github-token-env GITHUB_TOKEN \
            retest \
            --trigger-comment-id ${{ github.event.comment.id }} \
            --issue-number ${{ github.event.issue.number }} \
            --chroots ${{ needs.get-chroots.outputs.chroots }}
