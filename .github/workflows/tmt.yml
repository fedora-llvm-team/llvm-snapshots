name: "Test Management Tool"
# See https://docs.fedoraproject.org/en-US/ci/tmt/

on:
  workflow_dispatch: {}

jobs:
  tmt:
    strategy:
      fail-fast: false
      matrix:
        os: [fedora]
        version: [38, 39, rawhide]
        strategy: [standalone, big-merge, bootstrap]
        include:
          - name: standalone
            copr_project_tpl: "@fedora-llvm-team/llvm-snapshots-incubator-YYYYMMDD"
          - name: big-merge
            copr_project_tpl: "@fedora-llvm-team/llvm-snapshots-big-merge-YYYYMMDD"
          - name: bootstrap
            copr_project_tpl: "@fedora-llvm-team/llvm-snapshots-bootstrap-YYYYMMDD"
    runs-on: ubuntu-latest
    container:
      image: "${{ matrix.os }}:${{ matrix.version }}"
      # These options are required to be able to run lldb inside the container
      # See https://github.com/opencollab/llvm-toolchain-integration-test-suite/pull/96
      options: "--cap-add=SYS_PTRACE --security-opt seccomp=unconfined"
    steps:
      - name: "Setup tmt"
        run: |
          dnf install -y 'dnf-command(copr)'
          dnf copr enable -y psss/tmt
          dnf install -y tmt-all

      - uses: actions/checkout@v3

      - name: "Variables and functions"
        shell: bash -e {0}
        run: |
          today=`date +%Y%m%d`
          # TODO(kwk): Determine date some other way...
          today="20231022"

          username=@fedora-llvm-team
          echo "username=$username" >> $GITHUB_ENV
          echo "today_yyyymmdd=$today" >> $GITHUB_ENV
          echo "project_today=${{ matrix.copr_project_tpl }}" | sed "s/YYYYMMDD/$today/" >> $GITHUB_ENV

      - name: "Run tmt"
        shell: bash -e {0}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # See https://src.fedoraproject.org/tests/llvm/pull-request/19 for
          # the definition of the "snapshot" dimension
          # (https://fmf.readthedocs.io/en/latest/context.html#dimensions).
          tmt \
            -c distro=${{ matrix.os }}-${{ matrix.version }} \
            -c arch=x86_64 \
            -c snapshot=${{env.today_yyyymmdd}} \
            run --all -v -e YYYYMMDD=${{env.today_yyyymmdd}} \
            provision --how local -v \
            report -vvv \
            plan -n snapshot-gating

      - name: Archive tmt output.txt files
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: tmt-test-results-${{env.today_yyyymmdd}}-${{ matrix.os }}-${{ matrix.version }}
          path: /var/tmp/**/tmt/**/output.txt
          if-no-files-found: warn
