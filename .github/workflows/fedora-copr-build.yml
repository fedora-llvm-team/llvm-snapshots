name: "Build daily LLVM snapshots on Copr"

on:
  schedule:
    # Everyday at 00:45am
    # See https://docs.github.com/en/actions/reference/events-that-trigger-workflows#schedule
    - cron: "45 0 * * *"

  workflow_dispatch:
    inputs:
      strategy:
        description: 'build strategy'
        required: true
        type: choice
        default: all
        options:
        - all
        - big-merge
        - pgo

jobs:
  generate-matrix:
    if: github.repository_owner == 'fedora-llvm-team'
    runs-on: ubuntu-latest
    outputs:
      mymatrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
    - uses: actions/checkout@v4
    - uses: ./.github/actions/prepare-python
    - name: Setup Copr config file
      env:
        # You need to have those secrets in your repo.
        # See also: https://copr.fedorainfracloud.org/api/.
        COPR_CONFIG: ${{ secrets.COPR_CONFIG }}
      run: |
        mkdir -p ~/.config
        echo "$COPR_CONFIG" > ~/.config/copr
    - name: generate-matrix
      id: set-matrix
      run: |
        # shellcheck disable=SC2086
        echo "matrix=$(python3 \
          snapshot_manager/main.py github-matrix \
          --strategy ${{ inputs.strategy }} \
        )" >> $GITHUB_OUTPUT

  build-on-copr:
    if: github.repository_owner == 'fedora-llvm-team'
    needs: generate-matrix
    strategy:
      fail-fast: false
      matrix: ${{fromJson(needs.generate-matrix.outputs.mymatrix)}}
    runs-on: ubuntu-latest
    container: fedora:41
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/prepare-python

      - name: Setup Copr config file
        env:
          # You need to have those secrets in your repo.
          # See also: https://copr.fedorainfracloud.org/api/.
          COPR_CONFIG: ${{ secrets.COPR_CONFIG }}
        run: |
          mkdir -p ~/.config
          echo "$COPR_CONFIG" > ~/.config/copr

      - name: Install Copr CLI and required tools
        run: |
          dnf install -y copr-cli make bzip2 rpm-build pcre2-tools jq

      - name: "Variables"
        run: |
          today=$(date +%Y%m%d)
          yesterday=$(date -d "${today} -1 day" +%Y%m%d)

          username=@fedora-llvm-team
          {
            echo "username=$username"
            echo "yesterday=$yesterday"
            echo "project_today=${{ matrix.copr_ownername }}/${{ matrix.copr_project_tpl }}" | sed "s/YYYYMMDD/$today/"
            echo "project_yesterday=${{ matrix.copr_ownername }}/${{ matrix.copr_project_tpl }}" | sed "s/YYYYMMDD/$yesterday/"
            echo "project_target=${{ matrix.copr_target_project }}"
          } >> "$GITHUB_ENV"

      - name: "Check for Copr projects existence (yesterday, today, target)"
        run: |
          # Checks if a copr project exists
          function copr_project_exists(){
            local project="$1";
            copr get "$project" > /dev/null 2>&1
          }

          # Check general availability of projects
          copr_project_exists ${{ env.project_today }} && todays_project_exists=yes
          copr_project_exists ${{ env.project_yesterday }} && yesterdays_project_exists=yes
          copr_project_exists ${{ env.project_target }} && target_project_exists=yes

          # Check if yesterday's project exists and all builds succeeded
          if [[ "$yesterdays_project_exists" == "yes" ]]; then
            if ! python3 snapshot_manager/main.py has-all-good-builds --strategy ${{matrix.name}} --yyyymmdd ${{env.yesterday}}; then
              yesterdays_project_exists=no
            fi
          fi

          {
            echo "todays_project_exists=$todays_project_exists"
            echo "yesterdays_project_exists=$yesterdays_project_exists"
            echo "target_project_exists=$target_project_exists"
          } >> "$GITHUB_ENV"

      - name: "Canceling active builds (if any) in today's Copr project and deleting it: ${{ env.project_today }}"
        if: ${{ env.todays_project_exists == 'yes' }}
        run: |
          python3 snapshot_manager/main.py \
            delete-project \
            --strategy ${{matrix.name}} \
            --yyyymmdd "$yyyymmdd"

      - name: "Create today's Copr project: ${{ env.project_today }}"
        run: |
          # shellcheck disable=SC2207
          chroot_opts=($(for c in ${{ matrix.chroots }}; do echo -n " --chroot $c "; done))

          copr create \
            --instructions "$(cat project-instructions.md)" \
            --description  "$(cat project-description.md)" \
            --unlisted-on-hp on \
            --enable-net on \
            --runtime-repo-dependency "https://download.copr.fedorainfracloud.org/results/%40fedora-llvm-team/llvm-compat-packages/\$distname-\$releasever-\$basearch" \
            --multilib on \
            --appstream off \
            --delete-after-days 32 \
            --module-hotfixes on \
            "${chroot_opts[@]}" "${{ env.project_today }}"

      - name: "Enable snapshot_build build condition for all and swig:4.0 module in RHEL 8 build chroots (if any)"
        run: |
          for chroot in ${{ matrix.chroots }}; do
            copr edit-chroot --rpmbuild-with "snapshot_build" "${{ env.project_today }}/$chroot"
            if [[ "$chroot" == rhel-8-* ]]; then
              copr edit-chroot --modules "swig:4.0" "${{ env.project_today }}/$chroot"
            fi

            # Dump chroot information after all modification
            copr get-chroot "${{ env.project_today }}/$chroot"
          done

      - name: "Create today's package"
        run: |
          copr add-package-scm \
            --clone-url ${{ matrix.clone_url }} \
            --commit ${{ matrix.clone_ref }} \
            --spec "llvm.spec" \
            --type git \
            --method make_srpm \
            --name "llvm" \
            "${{ env.project_today }}"

      - name: "Build llvm package"
        run: |
          for chroot in ${{ matrix.chroots }}; do
            copr build-package \
              --timeout $((30*3600)) \
              --nowait \
              --name "llvm" \
              --chroot "${chroot}" \
              ${{ env.project_today }} \
              | tee "llvm.log"
          done

      - name: "Delete target Copr project at ${{ env.project_target }} before forking to it"
        if: ${{ env.yesterdays_project_exists == 'yes' && env.target_project_exists == 'yes' }}
        run: |
          copr delete "${{ env.project_target }}"
          # Give Copr some time to process the deletion, to avoid race conditions with forking.
          # TODO: Keep and eye on https://github.com/fedora-copr/copr/issues/2698 if there's a better way to handle this.
          sleep 1m

      - name: "Fork Copr project from ${{ env.project_yesterday }} to ${{ env.project_target }}"
        if: ${{ env.yesterdays_project_exists == 'yes' }}
        run: |
          copr fork --confirm ${{ env.project_yesterday }} ${{ env.project_target }}
          copr modify --delete-after-days -1 --unlisted-on-hp off ${{ env.project_target }}

      - name: "Regenerate repos for target project ${{ env.project_target }}"
        # If yesterday's project didn't exist, we haven't forked and so we don't
        # need to regenerate the repos.
        if: ${{ env.yesterdays_project_exists == 'yes' }}
        run: |
          copr regenerate-repos ${{ env.project_target }}
